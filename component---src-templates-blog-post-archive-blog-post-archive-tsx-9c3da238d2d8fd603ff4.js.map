{"version":3,"sources":["webpack://gatsby-starter-default/./src/models/blog-post-query-data.ts","webpack://gatsby-starter-default/./src/templates/blog-post-archive/blog-post-archive.tsx","webpack://gatsby-starter-default/./src/templates/blog-post-archive/models/blog-post-archive-props-data.ts"],"names":["transformBlogPostQueryDataToBlogPost","data","author","node","name","firstName","lastName","avatar","url","uri","id","title","excerpt","date","content","featuredImage","src","localFile","alt","altText","BlogPostArchive","pageContext","posts","allWpPost","nodes","map","transformBlogPostArchivePropsDataToBlogPosts","currentPageNumber","pageNumber","totalPageCount","totalPages"],"mappings":"qIA8BO,SAASA,EACdC,GACU,gBACJC,EAAM,UAAGD,EAAKC,cAAR,aAAG,EAAaC,KAC5B,MAAO,CACLD,OAAQA,GAAU,CAChBE,KACEF,EAAOG,WAAaH,EAAOI,SACvBJ,EAAOG,UAAY,IAAMH,EAAOI,SAChCJ,EAAOE,KACbG,OAAQL,EAAOK,OAAOC,IACtBA,IAAKN,EAAOO,KAEdC,GAAIT,EAAKS,GACTC,MAAOV,EAAKU,MACZC,QAASX,EAAKW,QACdC,KAAMZ,EAAKY,KACXL,IAAKP,EAAKQ,IACVK,QAASb,EAAKa,QACdC,cAAe,CACbC,IAAG,UAAEf,EAAKc,qBAAP,iBAAE,EAAoBZ,YAAtB,iBAAE,EAA0Bc,iBAA5B,aAAE,EAAqCT,IAC1CU,IAAG,UAAEjB,EAAKc,qBAAP,iBAAE,EAAoBZ,YAAtB,aAAE,EAA0BgB,U,qMCpC9B,SAASC,EAAT,GAAsE,IAA3CnB,EAA2C,EAA3CA,KAAMoB,EAAqC,EAArCA,YAChCC,ECHD,SACLrB,GACY,QACZ,OAAOA,SAAP,UAAOA,EAAMsB,iBAAb,iBAAO,EAAiBC,aAAxB,aAAO,EAAwBC,IAAIzB,KDAT0B,CAA6CzB,GAEvE,OACE,SAAC,KAAD,CACEqB,MAAOA,EACPK,kBAAmBN,EAAYO,WAC/BC,eAAgBR,EAAYS,aAKlC","file":"component---src-templates-blog-post-archive-blog-post-archive-tsx-9c3da238d2d8fd603ff4.js","sourcesContent":["import { BlogPost } from '@nx-gatsby-blogs/ui';\n\nexport interface BlogPostQueryData {\n  author: {\n    node: {\n      firstName: string;\n      lastName: string;\n      name: string;\n      uri: string;\n      avatar: {\n        url: string;\n      };\n    };\n  };\n  id: string;\n  title: string;\n  excerpt: string;\n  date: string;\n  uri: string;\n  content: string;\n  featuredImage?: {\n    node: {\n      altText: string;\n      localFile: {\n        url: string;\n      };\n    };\n  };\n}\n\nexport function transformBlogPostQueryDataToBlogPost(\n  data: BlogPostQueryData\n): BlogPost {\n  const author = data.author?.node;\n  return {\n    author: author && {\n      name:\n        author.firstName && author.lastName\n          ? author.firstName + ' ' + author.lastName\n          : author.name,\n      avatar: author.avatar.url,\n      url: author.uri,\n    },\n    id: data.id,\n    title: data.title,\n    excerpt: data.excerpt,\n    date: data.date,\n    url: data.uri,\n    content: data.content,\n    featuredImage: {\n      src: data.featuredImage?.node?.localFile?.url,\n      alt: data.featuredImage?.node?.altText,\n    },\n  };\n}\n","import { BlogPost, PostSummaryList } from '@nx-gatsby-blogs/ui';\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport {\n  BlogPostArchivePropsData,\n  transformBlogPostArchivePropsDataToBlogPosts,\n} from './models/blog-post-archive-props-data';\nimport { BlogPostArchivePropsPageContext } from './models/blog-post-archive-props-page-context';\n\nexport interface BlogPostArchiveProps {\n  data: BlogPostArchivePropsData;\n  pageContext: BlogPostArchivePropsPageContext;\n}\n\nexport function BlogPostArchive({ data, pageContext }: BlogPostArchiveProps) {\n  const posts: BlogPost[] = transformBlogPostArchivePropsDataToBlogPosts(data);\n\n  return (\n    <PostSummaryList\n      posts={posts}\n      currentPageNumber={pageContext.pageNumber}\n      totalPageCount={pageContext.totalPages}\n    />\n  );\n}\n\nexport default BlogPostArchive;\n\nexport const pageQuery = graphql`\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        author {\n          node {\n            firstName\n            lastName\n            name\n            uri\n            avatar {\n              url\n            }\n          }\n        }\n        id\n        excerpt\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        uri\n        featuredImage {\n          node {\n            altText\n            localFile {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { BlogPost } from '@nx-gatsby-blogs/ui';\n\nimport {\n  BlogPostQueryData,\n  transformBlogPostQueryDataToBlogPost,\n} from '../../../models/blog-post-query-data';\n\nexport interface BlogPostArchivePropsData {\n  allWpPost: {\n    nodes: BlogPostQueryData[];\n  };\n}\n\nexport function transformBlogPostArchivePropsDataToBlogPosts(\n  data: BlogPostArchivePropsData\n): BlogPost[] {\n  return data?.allWpPost?.nodes?.map(transformBlogPostQueryDataToBlogPost);\n}\n"],"sourceRoot":""}
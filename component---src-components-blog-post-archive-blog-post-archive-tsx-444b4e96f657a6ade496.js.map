{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/blog-post-archive/blog-post-archive.tsx","webpack://gatsby-starter-default/./src/components/blog-post-archive/models/blog-post-archive-props-data.ts"],"names":["BlogPostArchive","data","pageContext","posts","allWpPost","nodes","map","node","author","name","firstName","lastName","avatar","url","uri","id","title","excerpt","date","featuredImage","src","link","alt","altText","transformBlogPostArchivePropsDataToBlogPosts","currentPageNumber","pageNumber","totalPageCount","totalPages"],"mappings":"qPAoBO,SAASA,EAAT,GAAsE,IAA3CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,YAChCC,ECUD,SACLF,GACY,QACZ,OAAOA,SAAP,UAAOA,EAAMG,iBAAb,iBAAO,EAAiBC,aAAxB,aAAO,EAAwBC,KAAI,SAACC,GAAS,cACrCC,EAAM,UAAGD,EAAKC,cAAR,aAAG,EAAaD,KAC5B,MAAO,CACLC,OAAQA,GAAU,CAChBC,KACED,EAAOE,WAAaF,EAAOG,SACvBH,EAAOE,UAAY,IAAMF,EAAOG,SAChCH,EAAOC,KACbG,OAAQJ,EAAOI,OAAOC,IACtBA,IAAKL,EAAOM,KAEdC,GAAIR,EAAKQ,GACTC,MAAOT,EAAKS,MACZC,QAASV,EAAKU,QACdC,KAAMX,EAAKW,KACXC,cAAe,CACbC,IAAG,UAAEb,EAAKY,qBAAP,iBAAE,EAAoBZ,YAAtB,aAAE,EAA0Bc,KAC/BC,IAAG,UAAEf,EAAKY,qBAAP,iBAAE,EAAoBZ,YAAtB,aAAE,EAA0BgB,aD9BXC,CAA6CvB,GAEvE,OACE,SAAC,KAAD,CACEE,MAAOA,EACPsB,kBAAmBvB,EAAYwB,WAC/BC,eAAgBzB,EAAY0B,aAKlC","file":"component---src-components-blog-post-archive-blog-post-archive-tsx-444b4e96f657a6ade496.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport {\n  BlogPostArchivePropsData,\n  transformBlogPostArchivePropsDataToBlogPosts,\n} from './models/blog-post-archive-props-data';\nimport {\n  BlogPost,\n  NoPostsFound,\n  PostSummary,\n  PostSummaryList,\n} from '@nx-gatsby-blogs/ui';\nimport { Pagination, PaginationItem } from '@material-ui/lab';\nimport { BlogPostArchivePropsPageContext } from './models/blog-post-archive-props-page-context';\n\nexport interface BlogPostArchiveProps {\n  data: BlogPostArchivePropsData;\n  pageContext: BlogPostArchivePropsPageContext;\n}\n\nexport function BlogPostArchive({ data, pageContext }: BlogPostArchiveProps) {\n  const posts: BlogPost[] = transformBlogPostArchivePropsDataToBlogPosts(data);\n\n  return (\n    <PostSummaryList\n      posts={posts}\n      currentPageNumber={pageContext.pageNumber}\n      totalPageCount={pageContext.totalPages}\n    />\n  );\n}\n\nexport default BlogPostArchive;\n\nexport const pageQuery = graphql`\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        author {\n          node {\n            firstName\n            lastName\n            name\n            uri\n            avatar {\n              url\n            }\n          }\n        }\n        id\n        excerpt\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        featuredImage {\n          node {\n            id\n            altText\n            link\n          }\n        }\n      }\n    }\n  }\n`;\n","import { BlogPost } from '@nx-gatsby-blogs/ui';\n\nexport interface BlogPostArchivePropsData {\n  allWpPost: {\n    nodes: {\n      author: {\n        node: {\n          firstName: string;\n          lastName: string;\n          name: string;\n          uri: string;\n          avatar: {\n            url: string;\n          };\n        };\n      };\n      id: string;\n      title: string;\n      excerpt: string;\n      date: string;\n      featuredImage?: {\n        node: {\n          id: string;\n          link: string;\n          altText: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport function transformBlogPostArchivePropsDataToBlogPosts(\n  data: BlogPostArchivePropsData\n): BlogPost[] {\n  return data?.allWpPost?.nodes?.map((node) => {\n    const author = node.author?.node;\n    return {\n      author: author && {\n        name:\n          author.firstName && author.lastName\n            ? author.firstName + ' ' + author.lastName\n            : author.name,\n        avatar: author.avatar.url,\n        url: author.uri,\n      },\n      id: node.id,\n      title: node.title,\n      excerpt: node.excerpt,\n      date: node.date,\n      featuredImage: {\n        src: node.featuredImage?.node?.link,\n        alt: node.featuredImage?.node?.altText,\n      },\n    };\n  });\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://gatsby-starter-default/./src/utils/medium-links.ts","webpack://gatsby-starter-default/./src/models/blog-post-query-data.ts","webpack://gatsby-starter-default/./src/templates/blog-post-archive/blog-post-archive.tsx","webpack://gatsby-starter-default/./src/templates/blog-post-archive/models/blog-post-archive-props-data.ts"],"names":["mediumUrl","getMediumBlogUrl","username","uniqueSlug","getMediumImageUrl","imageId","mediumImageUrl","transformBlogPostQueryDataToBlogPost","data","author","name","avatar","url","id","title","excerpt","virtuals","subtitle","date","createdAt","featuredImage","src","previewImage","alt","BlogPostArchive","pageContext","posts","allMediumPost","nodes","map","transformBlogPostArchivePropsDataToBlogPosts","currentPageNumber","pageNumber","totalPageCount","totalPages"],"mappings":"qOAAMA,G,QAAY,sBAGX,SAASC,EAAiBC,EAAkBC,GACjD,OAAUH,EAAV,KAAwBE,EAAxB,IAAoCC,EAG/B,SAASC,EAAkBC,GAChC,MAAUC,4BAAkBD,ECmBvB,SAASE,EACdC,GACU,QDlBuBN,ECmB3BO,EAASD,EAAKC,OACpB,MAAO,CACLA,OAAQA,GAAU,CAChBC,KAAMD,EAAOC,KACbC,OAAQP,EAAkBK,EAAOJ,SACjCO,KDxB6BV,ECwBLO,EAAOP,SDvBzBF,EAAV,KAAwBE,ICyBtBW,GAAIL,EAAKK,GACTC,MAAON,EAAKM,MACZC,QAAO,UAAEP,EAAKQ,gBAAP,aAAE,EAAeC,SACxBC,KAAMV,EAAKW,UACXP,IAAKX,EAAiBQ,EAAOP,SAAUM,EAAKL,YAC5CiB,cAAe,CACbC,IAAKjB,EAAiB,UAACI,EAAKQ,gBAAN,aAAC,EAAeM,aAAajB,SACnDkB,IAAKf,EAAKK,K,cC7BT,SAASW,EAAT,GAAsE,IAA3ChB,EAA2C,EAA3CA,KAAMiB,EAAqC,EAArCA,YAChCC,ECHD,SACLlB,GACY,QACZ,OAAOA,SAAP,UAAOA,EAAMmB,qBAAb,iBAAO,EAAqBC,aAA5B,aAAO,EAA4BC,IAAItB,GDAbuB,CAA6CtB,GAEvE,OACE,SAAC,KAAD,CACEkB,MAAOA,EACPK,kBAAmBN,EAAYO,WAC/BC,eAAgBR,EAAYS,aAKlC","file":"component---src-templates-blog-post-archive-blog-post-archive-tsx-2038e201ffc09a6969c6.js","sourcesContent":["const mediumUrl = 'https://medium.com';\nconst mediumImageUrl = 'https://miro.medium.com/';\n\nexport function getMediumBlogUrl(username: string, uniqueSlug: string) {\n  return `${mediumUrl}/@${username}/${uniqueSlug}`;\n}\n\nexport function getMediumImageUrl(imageId: string) {\n  return `${mediumImageUrl}/${imageId}`;\n}\n\nexport function getMediumAuthorUrl(username: string) {\n  return `${mediumUrl}/@${username}`;\n}\n","import { BlogPost } from '@nx-gatsby-blogs/ui';\n\nimport {\n  getMediumAuthorUrl,\n  getMediumBlogUrl,\n  getMediumImageUrl,\n} from '../utils/medium-links';\n\nexport interface BlogPostQueryData {\n  author: {\n    name: string;\n    username: string;\n    bio: string;\n    imageId: string;\n  };\n  id: string;\n  title: string;\n  createdAt: string;\n  uniqueSlug: string;\n  virtuals: {\n    previewImage: {\n      imageId: string;\n    };\n    subtitle: string;\n  };\n}\n\nexport function transformBlogPostQueryDataToBlogPost(\n  data: BlogPostQueryData\n): BlogPost {\n  const author = data.author;\n  return {\n    author: author && {\n      name: author.name,\n      avatar: getMediumImageUrl(author.imageId),\n      url: getMediumAuthorUrl(author.username),\n    },\n    id: data.id,\n    title: data.title,\n    excerpt: data.virtuals?.subtitle,\n    date: data.createdAt,\n    url: getMediumBlogUrl(author.username, data.uniqueSlug),\n    featuredImage: {\n      src: getMediumImageUrl(data.virtuals?.previewImage.imageId),\n      alt: data.id,\n    },\n  };\n}\n","import { BlogPost, PostSummaryList } from '@nx-gatsby-blogs/ui';\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport {\n  BlogPostArchivePropsData,\n  transformBlogPostArchivePropsDataToBlogPosts,\n} from './models/blog-post-archive-props-data';\nimport { BlogPostArchivePropsPageContext } from './models/blog-post-archive-props-page-context';\n\nexport interface BlogPostArchiveProps {\n  data: BlogPostArchivePropsData;\n  pageContext: BlogPostArchivePropsPageContext;\n}\n\nexport function BlogPostArchive({ data, pageContext }: BlogPostArchiveProps) {\n  const posts: BlogPost[] = transformBlogPostArchivePropsDataToBlogPosts(data);\n\n  return (\n    <PostSummaryList\n      posts={posts}\n      currentPageNumber={pageContext.pageNumber}\n      totalPageCount={pageContext.totalPages}\n    />\n  );\n}\n\nexport default BlogPostArchive;\n\nexport const pageQuery = graphql`\n  query MediumPostArchive($offset: Int!, $postsPerPage: Int!) {\n    allMediumPost(\n      sort: { fields: [createdAt], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        author {\n          imageId\n          username\n          bio\n          name\n        }\n        id\n        createdAt(formatString: \"MMMM DD, YYYY\")\n        title\n        uniqueSlug\n        virtuals {\n          previewImage {\n            imageId\n          }\n          subtitle\n        }\n      }\n    }\n  }\n`;\n","import { BlogPost } from '@nx-gatsby-blogs/ui';\n\nimport {\n  BlogPostQueryData,\n  transformBlogPostQueryDataToBlogPost,\n} from '../../../models/blog-post-query-data';\n\nexport interface BlogPostArchivePropsData {\n  allMediumPost: {\n    nodes: BlogPostQueryData[];\n  };\n}\n\nexport function transformBlogPostArchivePropsDataToBlogPosts(\n  data: BlogPostArchivePropsData\n): BlogPost[] {\n  return data?.allMediumPost?.nodes?.map(transformBlogPostQueryDataToBlogPost);\n}\n"],"sourceRoot":""}